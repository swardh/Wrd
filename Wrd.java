/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ward;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.WindowEvent;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileSystemView;
import javax.swing.filechooser.FileFilter;
import javax.swing.text.StyledEditorKit;
import javax.swing.text.DefaultEditorKit.*;


/**
 *
 * @author Retina
 */
public class Wrd extends javax.swing.JFrame {
    
    File savename;
    boolean saven = false;
    /**
     * Creates new form Wrd
     */
    public Wrd() {
        initComponents();
    }

        public void JFileChooser() {

        JFileChooser jfc = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
        jfc.setDialogTitle("Choose a directory to save your file: ");
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        int returnValue = jfc.showSaveDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            if (jfc.getSelectedFile().isDirectory()) {
                System.out.println("You selected the directory: " + jfc.getSelectedFile());
            }
        }

    }
        
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        Textpanel = new javax.swing.JTextArea();
        Displayfont = new javax.swing.JLabel();
        jSpinner2 = new javax.swing.JSpinner();
        Menu = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        New = new javax.swing.JMenu();
        NewBlank = new javax.swing.JMenuItem();
        NewHTML = new javax.swing.JMenuItem();
        Open = new javax.swing.JMenuItem();
        Save = new javax.swing.JMenuItem();
        Saveas = new javax.swing.JMenuItem();
        About = new javax.swing.JMenuItem();
        Quit = new javax.swing.JMenuItem();
        Edit = new javax.swing.JMenu();
        Font = new javax.swing.JMenu();
        Font1 = new javax.swing.JMenuItem();
        Font2 = new javax.swing.JMenuItem();
        Font3 = new javax.swing.JMenuItem();
        Fontsize = new javax.swing.JMenu();
        F12 = new javax.swing.JMenuItem();
        F14 = new javax.swing.JMenuItem();
        F16 = new javax.swing.JMenuItem();
        F18 = new javax.swing.JMenuItem();
        F20 = new javax.swing.JMenuItem();
        Style = new javax.swing.JMenu();
        Bold = new javax.swing.JMenuItem();
        Italic = new javax.swing.JMenuItem();
        Copy = new javax.swing.JMenuItem();
        Paste = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        Black = new javax.swing.JMenuItem();
        Blue = new javax.swing.JMenuItem();
        Pink = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(250, 100, 200, 200));

        jScrollPane2.setPreferredSize(new java.awt.Dimension(300, 200));

        Textpanel.setColumns(39);
        Textpanel.setRows(9);
        Textpanel.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Textpanel.setLocation(new java.awt.Point(200, 200));
        Textpanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TextpanelMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                TextpanelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                TextpanelMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(Textpanel);

        jSpinner2.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jSpinner2AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        Menu.setBackground(new java.awt.Color(5, 255, 2));
        Menu.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Menu.setForeground(new java.awt.Color(0, 0, 200));
        Menu.setToolTipText("hej");
        Menu.setFont(new java.awt.Font("Noteworthy", 1, 18)); // NOI18N
        Menu.setPreferredSize(new java.awt.Dimension(90, 30));

        File.setText("File");
        File.setFont(new java.awt.Font("Noteworthy", 1, 18)); // NOI18N

        New.setText("New");

        NewBlank.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.META_DOWN_MASK));
        NewBlank.setBackground(new java.awt.Color(255, 2, 255));
        NewBlank.setText("Empty");
        NewBlank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewBlankActionPerformed(evt);
            }
        });
        New.add(NewBlank);

        NewHTML.setText("HTML");
        NewHTML.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewHTMLActionPerformed(evt);
            }
        });
        New.add(NewHTML);

        File.add(New);

        Open.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.META_DOWN_MASK));
        Open.setText("Open");
        Open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenActionPerformed(evt);
            }
        });
        File.add(Open);

        Save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.META_DOWN_MASK));
        Save.setText("Save");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        File.add(Save);

        Saveas.setText("Save as");
        Saveas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveasActionPerformed(evt);
            }
        });
        File.add(Saveas);

        About.setText("About");
        About.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutActionPerformed(evt);
            }
        });
        File.add(About);

        Quit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Quit.setText("Quit");
        Quit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitActionPerformed(evt);
            }
        });
        File.add(Quit);

        Menu.add(File);

        Edit.setBorder(null);
        Edit.setForeground(new java.awt.Color(0, 50, 0));
        Edit.setText("Edit");
        Edit.setFont(new java.awt.Font("Noteworthy", 1, 18)); // NOI18N

        Font.setText("Font");
        Font.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FontActionPerformed(evt);
            }
        });

        Font1.setText("Noteworthy");
        Font1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Font1ActionPerformed(evt);
            }
        });
        Font.add(Font1);

        Font2.setText("Font2");
        Font2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Font2ActionPerformed(evt);
            }
        });
        Font.add(Font2);

        Font3.setText("Font3");
        Font.add(Font3);

        Edit.add(Font);

        Fontsize.setText("Font size");

        F12.setText("12");
        F12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F12ActionPerformed(evt);
            }
        });
        Fontsize.add(F12);

        F14.setText("14");
        F14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F14ActionPerformed(evt);
            }
        });
        Fontsize.add(F14);

        F16.setText("16");
        F16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F16ActionPerformed(evt);
            }
        });
        Fontsize.add(F16);

        F18.setText("18");
        F18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F18ActionPerformed(evt);
            }
        });
        Fontsize.add(F18);

        F20.setText("20");
        F20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                F20ActionPerformed(evt);
            }
        });
        Fontsize.add(F20);

        Edit.add(Fontsize);

        Style.setText("Style");

        Bold.setText("Bold");
        Bold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BoldActionPerformed(evt);
            }
        });
        Style.add(Bold);

        Italic.setText("Italic");
        Style.add(Italic);

        Edit.add(Style);

        Copy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.META_DOWN_MASK));
        Copy.setText("Copy");
        Copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CopyActionPerformed(evt);
            }
        });
        Edit.add(Copy);

        Paste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.META_DOWN_MASK));
        Paste.setText("Paste");
        Paste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasteActionPerformed(evt);
            }
        });
        Edit.add(Paste);

        jMenu1.setText("Font color");

        Black.setText("Black");
        Black.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlackActionPerformed(evt);
            }
        });
        jMenu1.add(Black);

        Blue.setText("Blue");
        Blue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BlueActionPerformed(evt);
            }
        });
        jMenu1.add(Blue);

        Pink.setText("Pink");
        Pink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PinkActionPerformed(evt);
            }
        });
        jMenu1.add(Pink);

        Edit.add(jMenu1);

        Menu.add(Edit);

        setJMenuBar(Menu);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 687, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Displayfont, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Displayfont, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 793, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        if (saven != true) {
       
        File fi = null;
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        chooser.setFileFilter(new FileTypeFilter(".doc", "Word File"));
        chooser.setFileFilter(new FileTypeFilter(".docx", "Word File"));
        chooser.setFileFilter(new FileTypeFilter(".txt", "Text File"));
//       chooser.setFileFilter(new FileTypeFilter(".jpg", "JPEG File"));
        int result = chooser.showSaveDialog(new JFrame());
        
        if (result == JFileChooser.APPROVE_OPTION) {
            fi = new File(chooser.getSelectedFile().getAbsolutePath()); 
                } 
                savename = fi;
                setTitle(chooser.getSelectedFile().getName());
        }
         
        try { 
                    // Create a file writer 
                    FileWriter wr = new FileWriter(savename, false); 
                    
            // Write
            try ( // Create buffered writer to write
                    BufferedWriter w = new BufferedWriter(wr)) {
                // Write
                w.write(Textpanel.getText());
                saven = true;
                w.flush();
            } 
                } 
                catch (IOException e) { 
                    JOptionPane.showMessageDialog(this, e.getMessage()); 
                } 
        
    }//GEN-LAST:event_SaveActionPerformed

    private void OpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenActionPerformed
        // TODO add your handling code here:
        File file;
        JFileChooser chooser = new JFileChooser();
        chooser.setFileFilter(new FileTypeFilter(".doc", "Word File"));
        chooser.setFileFilter(new FileTypeFilter(".docx", "Word File"));
        chooser.setFileFilter(new FileTypeFilter(".txt", "Text File"));
//        chooser.setFileFilter(new FileTypeFilter(".jpg", "JPEG File"));
        
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        int response = chooser.showOpenDialog(this);
        
        if(response == JFileChooser.APPROVE_OPTION) {
            file = chooser.getSelectedFile();
            savename = new File(chooser.getSelectedFile().getAbsolutePath()); 
            saven = true;
            setTitle(chooser.getSelectedFile().getName());
            
            try {
                BufferedReader br = new BufferedReader(new FileReader(file.getPath()));

                String line = "";
                String s = "";
                               
                while((s = br.readLine()) !=null){
                        line += s + "\n";
                        Textpanel.setText(line);
                    }
            
 
            } catch (IOException e) {
                 JOptionPane.showMessageDialog(this, "File not Found");
    }
    }    
    }//GEN-LAST:event_OpenActionPerformed

    private void FontActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FontActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FontActionPerformed

    private void Font1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Font1ActionPerformed
              Textpanel.setFont(new java.awt.Font("Noteworthy", 0, 18));


    }//GEN-LAST:event_Font1ActionPerformed

    private void BoldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BoldActionPerformed
        // TODO add your handling code here:
        Bold.addActionListener(new StyledEditorKit.BoldAction());
    }//GEN-LAST:event_BoldActionPerformed

    private void CopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CopyActionPerformed
        // TODO add your handling code here:
        JMenuItem copy = new JMenuItem(new CopyAction());
        copy.setHideActionText(true);
//        copy.setText("Copy");
        
    }//GEN-LAST:event_CopyActionPerformed

    private void PasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasteActionPerformed
        // TODO add your handling code here:
        JMenuItem paste = new JMenuItem(new PasteAction());
        paste.setHideActionText(true);
    }//GEN-LAST:event_PasteActionPerformed

    private void TextpanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TextpanelMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_TextpanelMouseClicked

    private void TextpanelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TextpanelMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextpanelMousePressed

    private void TextpanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TextpanelMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_TextpanelMouseReleased

    private void QuitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_QuitActionPerformed

    private void NewHTMLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewHTMLActionPerformed
        // TODO add your handling code here:
                    Textpanel.setText("<html>\n"
                            + "     <head><titel>My WebPage</titel></head>\n"
                            + "     <body>\n"
                            + "         <p>Text goes here</p>\n"
                            + "     </body>\n"
                            + "</html>\n");
                     setTitle("Hej");
    }//GEN-LAST:event_NewHTMLActionPerformed

    private void NewBlankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewBlankActionPerformed
        // TODO add your handling code here:
        Textpanel.setText("");
        saven = false;
        setTitle("New");
    }//GEN-LAST:event_NewBlankActionPerformed

    private void AboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, "WRDZ\nby : Ola Svärdh\n©", "WRDZ", 1);
    }//GEN-LAST:event_AboutActionPerformed

    private void SaveasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveasActionPerformed
        // TODO add your handling code here:
       
                File fi = null;
                JFileChooser chooser = new JFileChooser();
                chooser.setCurrentDirectory(new File(System.getProperty("user.home")));
                chooser.setFileFilter(new FileTypeFilter(".doc", "Word File"));
                chooser.setFileFilter(new FileTypeFilter(".docx", "Word File"));
                chooser.setFileFilter(new FileTypeFilter(".txt", "Text File"));
        //       chooser.setFileFilter(new FileTypeFilter(".jpg", "JPEG File"));
                int result = chooser.showSaveDialog(new JFrame());

                if (result == JFileChooser.APPROVE_OPTION) {
                    fi = new File(chooser.getSelectedFile().getAbsolutePath()); 
                        } 
                        savename = fi;
                        setTitle(chooser.getSelectedFile().getName());
                

                try { 
                            // Create a file writer 
                            FileWriter wr = new FileWriter(savename, false); 

                    // Write
                    try ( // Create buffered writer to write
                            BufferedWriter w = new BufferedWriter(wr)) {
                        // Write
                        w.write(Textpanel.getText());
                        saven = true;
                        w.flush();
                    } 
                        } 
                        catch (IOException e) { 
                            JOptionPane.showMessageDialog(this, e.getMessage()); 
                        } 
        
    
    }//GEN-LAST:event_SaveasActionPerformed

    private void F20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F20ActionPerformed
        // TODO add your handling code here:
        Textpanel.setFont(Textpanel.getFont().deriveFont(20f));
    }//GEN-LAST:event_F20ActionPerformed

    private void F12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F12ActionPerformed
        // TODO add your handling code here:
        Textpanel.setFont(Textpanel.getFont().deriveFont(12f));
    }//GEN-LAST:event_F12ActionPerformed

    private void F14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F14ActionPerformed
        // TODO add your handling code here:
        Textpanel.setFont(Textpanel.getFont().deriveFont(14f));
    }//GEN-LAST:event_F14ActionPerformed

    private void F16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F16ActionPerformed
        // TODO add your handling code here:
        Textpanel.setFont(Textpanel.getFont().deriveFont(16f));
    }//GEN-LAST:event_F16ActionPerformed

    private void F18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_F18ActionPerformed
        // TODO add your handling code here:
        Textpanel.setFont(Textpanel.getFont().deriveFont(18f));
    }//GEN-LAST:event_F18ActionPerformed

    private void Font2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Font2ActionPerformed
              Textpanel.setFont(new java.awt.Font("Cambria", 1, 14));
    }//GEN-LAST:event_Font2ActionPerformed

    private void jSpinner2AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jSpinner2AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jSpinner2AncestorAdded

    private void BlackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BlackActionPerformed
        Textpanel.setForeground(Color.BLACK);
    }//GEN-LAST:event_BlackActionPerformed

    private void BlueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BlueActionPerformed
        Textpanel.setForeground(Color.BLUE);
    }//GEN-LAST:event_BlueActionPerformed

    private void PinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PinkActionPerformed
        Textpanel.setForeground(Color.PINK);
    }//GEN-LAST:event_PinkActionPerformed
    
        
    /**
     * @param args the command line arguments
     */
    
        public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Wrd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Wrd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem About;
    private javax.swing.JMenuItem Black;
    private javax.swing.JMenuItem Blue;
    private javax.swing.JMenuItem Bold;
    private javax.swing.JMenuItem Copy;
    private javax.swing.JLabel Displayfont;
    private javax.swing.JMenu Edit;
    private javax.swing.JMenuItem F12;
    private javax.swing.JMenuItem F14;
    private javax.swing.JMenuItem F16;
    private javax.swing.JMenuItem F18;
    private javax.swing.JMenuItem F20;
    private javax.swing.JMenu File;
    private javax.swing.JMenu Font;
    private javax.swing.JMenuItem Font1;
    private javax.swing.JMenuItem Font2;
    private javax.swing.JMenuItem Font3;
    private javax.swing.JMenu Fontsize;
    private javax.swing.JMenuItem Italic;
    private javax.swing.JMenuBar Menu;
    private javax.swing.JMenu New;
    private javax.swing.JMenuItem NewBlank;
    private javax.swing.JMenuItem NewHTML;
    private javax.swing.JMenuItem Open;
    private javax.swing.JMenuItem Paste;
    private javax.swing.JMenuItem Pink;
    private javax.swing.JMenuItem Quit;
    private javax.swing.JMenuItem Save;
    private javax.swing.JMenuItem Saveas;
    private javax.swing.JMenu Style;
    private javax.swing.JTextArea Textpanel;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner2;
    // End of variables declaration//GEN-END:variables

    private static class FileTypeFilter extends FileFilter {
    private String extension;
    private String description;
 
    public FileTypeFilter(String extension, String description) {
        this.extension = extension;
        this.description = description;
    }
 
    public boolean accept(File file) {
        if (file.isDirectory()) {
            return true;
        }
        return file.getName().endsWith(extension);
    }
 
    public String getDescription() {
        return description + String.format(" (*%s)", extension);
    }
    }
        
}


/*
            
            AKRAMS///////
try{
 Scanner scanner = new Scanner(chooser.getSelectedFile());

 String buffer = "";

 while(scanner.hasNext()) {

 buffer += scanner.nextLine() + "\n";
 }
 
 textpanel.setText(buffer);
 statusField.setText("Loaded " + chooser.getSelectedFile().getAbsolutePath());

 scanner.close();
}
 catch(FileNotFoundException ex) {

 JOptionPane.showMessageDialog(this, "File not Found");

 }



        }

 }

*/